{"version":3,"sources":["views/RegisterView.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js"],"names":["RegisterView","dispatch","useDispatch","useState","name","email","password","user","setUser","handleChange","event","typeOfInput","currentTarget","input","value","prevState","onSubmit","preventDefault","authOperations","register","className","type","onChange","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","length","err","unsupportedIterableToArray","TypeError"],"mappings":"kNAIe,SAASA,IACtB,IAAMC,EAAWC,cAEjB,EAAwBC,mBAAS,CAAEC,KAAM,GAAIC,MAAO,GAAIC,SAAU,KAAlE,mBAAOC,EAAP,KAAaC,EAAb,KAEMC,EAAe,SAAAC,GACnB,IAAMC,EAAcD,EAAME,cAAcR,KAClCS,EAAQH,EAAME,cAAcE,MAClCN,GAAQ,SAAAO,GAAS,kCAAUA,GAAV,kBAAsBJ,EAAcE,QASvD,OACE,gCACE,8CACA,uBAAMG,SATW,SAAAN,GACnBA,EAAMO,iBACNhB,EAASiB,IAAeC,SAASZ,IACjCC,EAAQ,CAAEJ,KAAM,GAAIC,MAAO,GAAIC,SAAU,MAMTc,UAAU,OAAxC,UACE,wBAAOA,UAAU,cAAjB,iBAEE,uBACEC,KAAK,OACLjB,KAAK,OACLU,MAAOP,EAAKH,KACZkB,SAAUb,OAGd,wBAAOW,UAAU,cAAjB,iBAEE,uBACEC,KAAK,QACLjB,KAAK,QACLU,MAAOP,EAAKF,MACZiB,SAAUb,OAGd,wBAAOW,UAAU,cAAjB,qBAEE,uBACEC,KAAK,WACLjB,KAAK,WACLU,MAAOP,EAAKD,SACZgB,SAAUb,OAGd,wBAAQY,KAAK,SAAb,8B,8EChDO,SAASE,EAAeC,EAAKC,GAC1C,OCLa,SAAyBD,GACtC,GAAIE,MAAMC,QAAQH,GAAM,OAAOA,EDIxB,CAAeA,IELT,SAA+BA,EAAKC,GACjD,GAAsB,qBAAXG,QAA4BA,OAAOC,YAAYC,OAAON,GAAjE,CACA,IAAIO,EAAO,GACPC,GAAK,EACLC,GAAK,EACLC,OAAKC,EAET,IACE,IAAK,IAAiCC,EAA7BC,EAAKb,EAAII,OAAOC,cAAmBG,GAAMI,EAAKC,EAAGC,QAAQC,QAChER,EAAKS,KAAKJ,EAAGtB,QAETW,GAAKM,EAAKU,SAAWhB,GAH8CO,GAAK,IAK9E,MAAOU,GACPT,GAAK,EACLC,EAAKQ,EACL,QACA,IACOV,GAAsB,MAAhBK,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIJ,EAAI,MAAMC,GAIlB,OAAOH,GFnBuB,CAAqBP,EAAKC,IAAM,OAAAkB,EAAA,GAA2BnB,EAAKC,IGLjF,WACb,MAAM,IAAImB,UAAU,6IHIgF","file":"static/js/5.4b99b154.chunk.js","sourcesContent":["import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { authOperations } from '../redux/auth';\n\nexport default function RegisterView() {\n  const dispatch = useDispatch();\n\n  const [user, setUser] = useState({ name: '', email: '', password: '' });\n\n  const handleChange = event => {\n    const typeOfInput = event.currentTarget.name;\n    const input = event.currentTarget.value;\n    setUser(prevState => ({ ...prevState, [typeOfInput]: input }));\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    dispatch(authOperations.register(user));\n    setUser({ name: '', email: '', password: '' });\n  };\n\n  return (\n    <div>\n      <h2>Registration</h2>\n      <form onSubmit={handleSubmit} className=\"Form\">\n        <label className=\"Form__lable\">\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={user.name}\n            onChange={handleChange}\n          ></input>\n        </label>\n        <label className=\"Form__lable\">\n          Mail\n          <input\n            type=\"email\"\n            name=\"email\"\n            value={user.email}\n            onChange={handleChange}\n          ></input>\n        </label>\n        <label className=\"Form__lable\">\n          Password\n          <input\n            type=\"password\"\n            name=\"password\"\n            value={user.password}\n            onChange={handleChange}\n          ></input>\n        </label>\n        <button type=\"submit\">Register</button>\n      </form>\n    </div>\n  );\n}\n","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"sourceRoot":""}