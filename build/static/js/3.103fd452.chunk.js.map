{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","components/ContactItem/ContactItem.module.css","components/Filter/Filter.module.css","components/ContactForm/ContactForm.js","components/ContactItem/ContactItem.js","components/ContactList/ContactList.js","components/Filter/Filter.js","views/ContactsView.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js"],"names":["module","exports","ContactForm","dispatch","useDispatch","useState","name","setName","number","setNumber","onSubmit","event","preventDefault","contactsOperations","addContact","className","styles","form__label","form__input","type","pattern","title","required","value","onChange","target","ContactItem","onDelete","contact","onClick","connect","state","contacts","contactsSelectors","getVisibleContacts","id","deleteContact","map","contact__item","Filter","useSelector","getFilter","filter__label","filter__input","contactsActions","changeFilter","ContactsView","isLoadingContacts","getLoading","useEffect","fetchContacts","color","height","width","timeout","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","length","err","unsupportedIterableToArray","TypeError"],"mappings":"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","file":"static/js/3.103fd452.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form__label\":\"ContactForm_form__label__29wai\",\"form__input\":\"ContactForm_form__input__2Da0Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact__item\":\"ContactList_contact__item__2VxF3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact\":\"ContactItem_contact__3qq0R\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter__label\":\"Filter_filter__label__-R5N8\",\"filter__input\":\"Filter_filter__input__3tnPC\"};","// import ProtoTypes from 'prop-types';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport styles from './ContactForm.module.css';\nimport { contactsOperations } from '../../redux/contacts';\n\nexport default function ContactForm() {\n  const dispatch = useDispatch();\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChangeName = event => {\n    setName(event.target.value);\n  };\n\n  const handleChangeNumber = event => {\n    setNumber(event.target.value);\n  };\n\n  const onSubmit = (name, number) => {\n    dispatch(contactsOperations.addContact(name, number));\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    onSubmit(name, number);\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <label className={styles.form__label}>\n        Name\n        <input\n          className={styles.form__input}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          value={name}\n          onChange={handleChangeName}\n        />\n      </label>\n      <label className={styles.form__label}>\n        Number\n        <input\n          className={styles.form__input}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          value={number}\n          onChange={handleChangeNumber}\n        />\n      </label>\n\n      <button type=\"submit\">Add contact</button>\n    </form>\n  );\n}\n\n// ContactForm.propTypes = { onSubmit: ProtoTypes.func.isRequired };\n","import ProtoTypes from 'prop-types';\nimport styles from './ContactItem.module.css';\nconst ContactItem = ({ name, number, onDelete }) => {\n  return (\n    <>\n      <span className={styles.contact}>\n        {name}: {number}\n      </span>\n      <button type=\"button\" onClick={onDelete}>\n        Delete\n      </button>\n    </>\n  );\n};\n\nContactItem.propTypes = {\n  name: ProtoTypes.string.isRequired,\n  number: ProtoTypes.string.isRequired,\n  onDelete: ProtoTypes.func.isRequired,\n};\nexport default ContactItem;\n","import { connect } from 'react-redux';\nimport { contactsOperations } from '../../redux/contacts';\nimport { contactsSelectors } from '../../redux/contacts';\nimport ProtoTypes from 'prop-types';\nimport styles from './ContactList.module.css';\nimport ContactItem from '../ContactItem/ContactItem';\nconst ContactList = ({ contacts, onDelete }) => (\n  <ul>\n    {contacts.map(({ id, name, number }) => (\n      <li key={id} className={styles.contact__item}>\n        <ContactItem\n          name={name}\n          number={number}\n          id={id}\n          onDelete={() => onDelete(id)}\n        />\n      </li>\n    ))}\n  </ul>\n);\n\nContactList.propTypes = {\n  contacts: ProtoTypes.arrayOf(\n    ProtoTypes.shape({ id: ProtoTypes.string.isRequired }),\n  ),\n};\n\nconst mapStateToProps = state => {\n  return { contacts: contactsSelectors.getVisibleContacts(state) };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  onDelete: id => dispatch(contactsOperations.deleteContact(id)),\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import { useDispatch, useSelector } from 'react-redux';\nimport { contactsActions } from '../../redux/contacts';\nimport { contactsSelectors } from '../../redux/contacts';\nimport ProtoTypes from 'prop-types';\nimport styles from './Filter.module.css';\nexport default function Filter() {\n  const dispatch = useDispatch();\n  const value = useSelector(contactsSelectors.getFilter);\n  const onChange = event =>\n    dispatch(contactsActions.changeFilter(event.target.value));\n\n  return (\n    <label className={styles.filter__label}>\n      Find contacts by name\n      <input\n        className={styles.filter__input}\n        type=\"text\"\n        name=\"filter\"\n        value={value}\n        onChange={onChange}\n      ></input>\n    </label>\n  );\n}\nFilter.propTypes = {\n  value: ProtoTypes.string,\n  // onChange: ProtoTypes.func.isRequired,\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport Loader from 'react-loader-spinner';\nimport ContactForm from '../components/ContactForm';\nimport ContactList from '../components/ContactList';\nimport Filter from '../components/Filter';\nimport { contactsOperations, contactsSelectors } from '../redux/contacts';\n\nexport default function ContactsView() {\n  const dispatch = useDispatch();\n  const isLoadingContacts = useSelector(contactsSelectors.getLoading);\n\n  useEffect(() => {\n    dispatch(contactsOperations.fetchContacts());\n  }, [dispatch]);\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      {isLoadingContacts && (\n        <Loader\n          type=\"Circles\"\n          color=\"#b2ee8e\"\n          height={50}\n          width={50}\n          timeout={3000}\n          className=\"Loader\"\n        />\n      )}\n      <ContactList />\n    </div>\n  );\n}\n","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"sourceRoot":""}